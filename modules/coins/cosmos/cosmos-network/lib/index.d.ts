declare const TAG = " | cosmos-api | ";
declare const Axios: any;
declare const https: any;
declare const axios: any;
declare const log: any;
declare let wait: any;
declare let sleep: any;
declare const txEncoder: any;
declare const ASSET = "ATOM";
declare let nodes: any;
declare let publicNode: any;
declare let ATOM_BASE: number;
declare let URL_GAIAD: string;
declare let RUNTIME: any;
declare let get_mempool: () => Promise<any>;
declare let check_online_status: () => Promise<any>;
declare let get_balance: (address: string) => Promise<number>;
declare let get_voucher_info: (voucher: string) => Promise<any>;
declare let get_balances: (address: string) => Promise<({
    type: string;
    asset: string;
    denom: string;
    balance: any;
} | {
    type: string;
    ibc: boolean;
    voucher: any;
    denom: any;
    channel: any;
    balance: number;
})[]>;
declare let get_delegations_txs_address: (address: string) => Promise<any>;
declare let get_rewards: (address: string) => Promise<any>;
declare let get_delegations_by_address: (address: string) => Promise<any>;
declare let get_delegations_by_validator: (address: string, validator: string) => Promise<any>;
declare let get_current_validators: () => Promise<any>;
declare let get_last_commit: () => Promise<any>;
declare let get_block_height: () => Promise<number>;
declare let get_block_height_remote: () => Promise<any>;
declare let get_validators_at_height: (height: string) => Promise<any>;
declare let get_validators: () => Promise<any>;
declare let get_txs_by_height: (height: string) => Promise<any>;
declare let get_block: (height: string) => Promise<any>;
declare let get_account: (address: string) => Promise<any>;
declare let get_account_remote: (address: string) => Promise<any>;
declare let encode_transaction: (tx: string) => Promise<any>;
declare let broadcast_transaction: (tx: string) => Promise<any>;
declare let broadcast_transaction_legacy: (tx: string) => Promise<any>;
declare let get_node_info: () => Promise<any>;
declare let get_node_info_verbose: () => Promise<any>;
declare let get_node_syncing: () => Promise<any>;
declare let get_node_version: () => Promise<any>;
declare let normalize_tx: (tx: any, type: any) => any;
declare let get_txs_by_address: (address: string) => Promise<any>;
declare let getTransaction: (txid: string) => Promise<any>;
declare let getStakingInfo: (address: string, valAddress: string) => Promise<any>;
